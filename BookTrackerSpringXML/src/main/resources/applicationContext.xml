<?xml version="1.0" encoding="UTF-8"?>

<!-- set up the file so Spring can read it in 
     Make Spring understand everything else that comes inside. -->
     
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
                http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- identify each of our different classes and how they tie together 
         Use the <bean> tags -->
    
    <!-- simple classes that have no dependencies -->
    <bean id="io" class="com.sg.booktracker.ui.UserIOConsoleImpl" />

    <bean id="dao" class="com.sg.booktracker.dao.BookDaoMemoryImpl" />

    <!-- id field: reference each class in other parts of the XML, 
         class field: fully qualified name of the class we want to inject. 
         Make beans out of the Impl versions, rather than the interfaces.

        Now beans for the rest of the classes
        And adding in the dependencies as they are necessary: -->
    
    <bean id="view" class="com.sg.booktracker.ui.BookView">
        <constructor-arg ref="io" />
    </bean>

    <bean id="service" class="com.sg.booktracker.service.BookService">
        <constructor-arg ref="dao" />
    </bean>

    <bean id="controller" class="com.sg.booktracker.controller.BookController">
        <constructor-arg ref="service" />
        <constructor-arg ref="view" />
    </bean>
    
    <!-- bean tags here are not self-closed to add in our dependencies. -->
    
    <!-- constructor-arg tags: used to do the constructor that takes in the dependency
         ref field references the id of the class that needs to be injected.
    -->
    
    <!-- set up all our dependencies: 
             our view takes in the UserIO class, 
             our service takes in the dao, 
             our controller takes in our service and view.-->
</beans>
